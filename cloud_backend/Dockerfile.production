# Production-optimized Dockerfile for Cloud deployment
FROM ultralytics/ultralytics:latest-cpu

WORKDIR /app

# Set production environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV ENVIRONMENT=production

# Install production dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    python-multipart==0.0.6 \
    jinja2==3.1.2 \
    google-generativeai==0.3.2 \
    pillow==10.0.1 \
    numpy==1.24.3 \
    opencv-python-headless==4.8.1.78 \
    qrcode[pil]==7.4.2 \
    firebase-admin==6.2.0 \
    asyncpg==0.29.0 \
    redis==5.0.1 \
    python-dotenv==1.0.0 \
    aiofiles==23.2.1 \
    requests==2.31.0 \
    websockets==12.0 \
    pydantic==2.5.0 \
    gunicorn==21.2.0 \
    sentry-sdk[fastapi]==1.40.0

# Copy application code
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p /app/static/uploads /app/models /app/templates /app/logs && \
    chmod -R 755 /app

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash appuser && \
    chown -R appuser:appuser /app
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Production startup command with Gunicorn
CMD ["gunicorn", "app:app", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000", "--access-logfile", "-", "--error-logfile", "-", "--log-level", "info"]